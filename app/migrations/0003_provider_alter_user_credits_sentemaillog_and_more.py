# Generated by Django 5.2.3 on 2025-07-09 17:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0002_user_credits_emailusage"),
    ]

    operations = [
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Provider name"
                    ),
                ),
                (
                    "provider_type",
                    models.CharField(
                        choices=[("MAILERSEND", "MAILERSEND"), ("SMTP2GO", "SMTP2GO")],
                        max_length=20,
                    ),
                ),
                ("credentials_format", models.JSONField(default=dict)),
                (
                    "master_credentials",
                    models.JSONField(verbose_name="Master credentials"),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="user",
            name="credits",
            field=models.PositiveIntegerField(default=2, verbose_name="Credits"),
        ),
        migrations.CreateModel(
            name="SentEmailLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("provider", models.CharField(max_length=50, verbose_name="Provider")),
                (
                    "time_sent",
                    models.DateTimeField(auto_now_add=True, verbose_name="Time sent"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("queued", "Queued"),
                            ("delivered", "Delivered"),
                            ("bounced", "Bounced"),
                            ("opened", "Opened"),
                        ],
                        default="queued",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "time_read",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Time read"
                    ),
                ),
                (
                    "to_email",
                    models.CharField(max_length=255, verbose_name="Recipient email"),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Subject"
                    ),
                ),
                (
                    "message_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Message ID"
                    ),
                ),
                (
                    "message_tag",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Message tag",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Error message"
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_emails_by_app",
                        to="app.deployedapp",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_emails_by_user",
                        to="app.user",
                    ),
                ),
            ],
            options={
                "ordering": ["-time_sent"],
            },
        ),
        migrations.CreateModel(
            name="AppSendingConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("credentials", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "provisioning_status",
                    models.CharField(
                        choices=[
                            ("idle", "Idle"),
                            ("pending", "Pending"),
                            ("error", "Error"),
                            ("success", "Success"),
                        ],
                        default="idle",
                        max_length=20,
                        verbose_name="Provisioning creds status",
                    ),
                ),
                ("provisioning_error", models.TextField(blank=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="app_smtp_credentials",
                        to="app.deployedapp",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_smtp_credentials",
                        to="app.user",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_smtp_credentials",
                        to="app.provider",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("is_active", True)),
                        fields=("app", "user"),
                        name="unique_active_app_user_config",
                    )
                ],
            },
        ),
    ]
